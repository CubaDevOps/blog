---
import Layout from "../../layouts/Layout.astro";
import BlogThumb from "../../components/BlogThumb.astro";
import Pagination from "../../components/Pagination.astro";

export async function getStaticPaths({ paginate }) {
  const posts_per_page = 1;
  const allPosts = await Astro.glob('../../pages/posts/*.md');
  const ordered_posts = allPosts.sort((a, b) => new Date(a.frontmatter.date) - new Date(b.frontmatter.date)).reverse();
  return paginate(ordered_posts, { pageSize: posts_per_page });
}
// All paginated data is passed on the "page" prop
const { page } = Astro.props;
const pathname = new URL(Astro.request.url).pathname.split('/');
const firstPath = pathname[1];
---

<Layout pageTitle="Blog">
    <h2>Ultimas entradas : {page.currentPage }</h2>
    <ul>
        {page.data.map((post: { url: any; frontmatter: { title: any; description: any; pubDate: any; image: { url: any; }; }; }) => 
            <li>
                <BlogThumb 
                url={post.url} 
                title={post.frontmatter.title}
                description={post.frontmatter.description}
                date={post.frontmatter.pubDate}
                img={post.frontmatter.image.url}>
            </li>
        )}
    </ul>

    <Pagination length={page.lastPage} 
        currentUrl={page.url.current} 
        currentPage={page.currentPage} 
        firstUrl={`/${firstPath}`} 
        prevUrl={page.url.prev} 
        nextUrl={page.url.next} 
        lastUrl={`/${firstPath}/${page.lastPage}`}
      />

</Layout>



<style>
    ul{
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        gap: 1rem;
        justify-content: flex-start;
    }
    li {
        list-style: none;
        height: 400px;
        width: 250px;
    }
</style>
